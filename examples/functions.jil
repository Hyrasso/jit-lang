fn ( y: int ) int : 3 * 2

f1: fn(int) int = fn ( x: int ) int : x+1

f2: fn(int, int) int = fn (a: int, b: int) int:
    inner_f: fn(int)int = fn(x: int) int:
        a + x
    f1(a) + b * 2 - inner_f(0)

print(f1(3))

print(f2(7, 5))

infered_type_f := fn(a: int) int:
    a

no_arg_func : fn() int = fn() int:
    1

no_return_func : fn(int) = fn(x: int):
    x

nothing_func : fn() = fn():
    3
